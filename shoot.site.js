// Generated by CoffeeScript 1.7.1
(function() {
  var fs, siteRunner, utils;

  fs = require('fs');

  utils = require('utils');

  siteRunner = function() {
    var casper, filename, i, links, pageName, x, _pageName;
    casper = require('casper').create({
      verbose: true,
      logLevel: 'debug',
      waitTimeout: 10000,
      stepTimeout: 10000,
      retryTimeout: 150,
      viewportSize: {
        width: 1176,
        height: 806
      },
      pageSettings: {
        loadImages: true,
        loadPlugins: true,
        userAgent: 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv: 22.0) Gecko/20100101 Firefox/22.0',
        webSecurityEnabled: false,
        ignoreSslErrors: true
      },
      onWaitTimeout: function() {
        this.echo('wait timeout');
        this.clear();
        return this.page.stop();
      },
      onStepTimeout: function(timeout, step) {
        this.echo('step timeout');
        this.clear();
        return this.page.stop();
      }
    });
    casper.on('remote.message', function(msg) {
      return this.echo('remote message caught: ' + msg);
    });
    casper.on('page.error', function(msg, trace) {
      var i, step, _i, _len, _results;
      this.echo('Error: ' + msg, 'ERROR');
      _results = [];
      for (_i = 0, _len = trace.length; _i < _len; _i++) {
        i = trace[_i];
        step = trace[i];
        _results.push(this.echo('   ' + step.file + ' (line ' + step.line + ')', 'ERROR'));
      }
      return _results;
    });
    filename = void 0;
    links = [];
    process.argv.forEach(function(arg, index) {
      if (index === 2) {
        filename = arg;
      }
      if (index > 2) {
        return links.push(arg);
      }
    });
    x = pageName = _pageName = void 0;
    i = -1;
    casper.start("" + filename + "/", function() {
      x = links;
    });
    casper.then(function() {
      this.each(x, function() {
        ++i;
        this.thenOpen(("" + filename) + x[i], function() {
          this.capture(this.getTitle().replace(/\|/g, '-') + '.png');
        });
      });
    });
    return casper.run();
  };

  siteRunner();

}).call(this);
